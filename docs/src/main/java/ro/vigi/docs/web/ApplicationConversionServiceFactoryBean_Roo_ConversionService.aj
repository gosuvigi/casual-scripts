// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ro.vigi.docs.web;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;
import ro.vigi.docs.domain.Document;
import ro.vigi.docs.domain.DocumentType;
import ro.vigi.docs.service.DocumentService;
import ro.vigi.docs.service.DocumentTypeService;
import ro.vigi.docs.web.ApplicationConversionServiceFactoryBean;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    DocumentService ApplicationConversionServiceFactoryBean.documentService;
    
    @Autowired
    DocumentTypeService ApplicationConversionServiceFactoryBean.documentTypeService;
    
    public Converter<Document, String> ApplicationConversionServiceFactoryBean.getDocumentToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.vigi.docs.domain.Document, java.lang.String>() {
            public String convert(Document document) {
                return new StringBuilder().append(document.getTitle()).append(' ').append(document.getMimeType()).toString();
            }
        };
    }
    
    public Converter<Long, Document> ApplicationConversionServiceFactoryBean.getIdToDocumentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.vigi.docs.domain.Document>() {
            public ro.vigi.docs.domain.Document convert(java.lang.Long id) {
                return documentService.findDocument(id);
            }
        };
    }
    
    public Converter<String, Document> ApplicationConversionServiceFactoryBean.getStringToDocumentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.vigi.docs.domain.Document>() {
            public ro.vigi.docs.domain.Document convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Document.class);
            }
        };
    }
    
    public Converter<DocumentType, String> ApplicationConversionServiceFactoryBean.getDocumentTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<ro.vigi.docs.domain.DocumentType, java.lang.String>() {
            public String convert(DocumentType documentType) {
                return new StringBuilder().append(documentType.getName()).append(' ').append(documentType.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, DocumentType> ApplicationConversionServiceFactoryBean.getIdToDocumentTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, ro.vigi.docs.domain.DocumentType>() {
            public ro.vigi.docs.domain.DocumentType convert(java.lang.Long id) {
                return documentTypeService.findDocumentType(id);
            }
        };
    }
    
    public Converter<String, DocumentType> ApplicationConversionServiceFactoryBean.getStringToDocumentTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, ro.vigi.docs.domain.DocumentType>() {
            public ro.vigi.docs.domain.DocumentType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), DocumentType.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getDocumentToStringConverter());
        registry.addConverter(getIdToDocumentConverter());
        registry.addConverter(getStringToDocumentConverter());
        registry.addConverter(getDocumentTypeToStringConverter());
        registry.addConverter(getIdToDocumentTypeConverter());
        registry.addConverter(getStringToDocumentTypeConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
